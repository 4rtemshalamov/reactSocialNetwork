{"version":3,"sources":["components/Navbar/Navbar.module.css","assets/images/user.jpg","components/common/Preloader/Preloader.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","components/common/FormControl/FormControl.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormControl/FormControl.js","Utilites/Validation/Validation.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","Login/Login.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","nav","item","activeLink","__webpack_require__","p","preloader","dialogs","dialogsItems","active","messages","message","formControl","error","formSummaryError","loginBlock","loginFormBlock","inputBlock","nameBlock","buttonLogin","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","getUsers","currentPage","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","initialState","posts","id","likesCount","newPostText","profile","setStatus","type","profileReducer","state","action","newPost","Object","objectSpread2","name","dialogsReducer","body","newMessageBody","sidebarReducer","users","totalUserCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","totalUsersCount","count","filter","isAuth","setAuthUserData","payload","getAuthUserData","dispatch","resultCode","_response$data$data","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Navbar","react_default","a","createElement","className","s","NavLink","to","activeClassName","DialogItem","props","path","dialog","Message","FormControl","_ref","input","meta","child","objectWithoutProperties","hasError","touched","styles","children","Textarea","restProps","assign","Input","required","value","maxLengthCreator","maxLength","length","maxLength50","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsElements","d","DialogItem_DialogItem","key","messagesElements","m","Message_Message","values","sendMessage","Redirect","mapStateToPropsForRedirect","compose","connect","sendMessageCreator","Component","React","render","this","Users","pagesCount","Math","ceil","pages","i","push","selectedPage","onClick","e","onPageChanged","src","photos","small","userPhoto","alt","disabled","some","Preloader","style","lib","color","size","duration","followSuccess","unfollowSuccess","setCurrentPage","setUsers","items","setTotalUsersCount","totalCount","[object Object]","args","super","pageNumber","componentDidMount","Fragment","Preloader_Preloader","Users_Users","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","currentTarget","componentDidUpdate","prevProps","prevState","snapshot","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","descriptionBlock","large","ProfileInfo_ProfileStatus","Post","maxLength10","AddMessagePostFormRedux","MyPosts","postsElements","Post_Post","postsBlock","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","authorizedUserId","getUserProfile","setUserProfile","withRouter","params","history","Profile_Profile","Header","header","Header_Header","LoginReduxForm","stopSubmit","_error","formData","initializeApp","promise","Promise","all","Header_HeaderContainer","Navbar_Navbar","Route","DialogsContainer","Profile_ProfileContainer","Users_UsersContainer","Login_Login","ReactDOM","HashRouter","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c761141.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2xJHy\",\"item\":\"Navbar_item__2DP68\",\"activeLink\":\"Navbar_activeLink__3lR3f\"};","module.exports = __webpack_public_path__ + \"static/media/user.18fc402b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1yqJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__30FV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Xypf\",\"dialogsItems\":\"Dialogs_dialogsItems__1YBHg\",\"active\":\"Dialogs_active__36zDX\",\"messages\":\"Dialogs_messages__1nOCf\",\"message\":\"Dialogs_message__33tg0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__2Z5wt\",\"error\":\"FormControl_error__2GmKL\",\"formSummaryError\":\"FormControl_formSummaryError__2CJIa\",\"loginBlock\":\"FormControl_loginBlock__PzVwl\",\"loginFormBlock\":\"FormControl_loginFormBlock__1dzWE\",\"inputBlock\":\"FormControl_inputBlock__16U0w\",\"nameBlock\":\"FormControl_nameBlock__2XR_P\",\"buttonLogin\":\"FormControl_buttonLogin__1WUWd\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"a8273fec-ec2f-4bbd-b971-c3b04a73c43a\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n   me() {\r\n       return instance.get(`auth/me`)\r\n   },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n};\r\n\r\n\r\n","\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n}\r\n\r\nexport default profileReducer;\r\n","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n       case SEND_MESSAGE:\r\n           let body = action.newMessageBody;\r\n           return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            };\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n        })\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me()\r\n        .then(response => {\r\n\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true))\r\n            }\r\n        })\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n               dispatch(getAuthUserData())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n                dispatch( stopSubmit(\"login\", {_error: message}))\r\n            }\r\n\r\n\r\n        })\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null , false))\r\n            }\r\n        })\r\n};\r\nexport default authReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\nexport const initializeApp  = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n};\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport styles from \"./FormControl.module.css\"\r\n\r\nexport const FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl  {...props}><input  {...input} {...restProps}></input></FormControl>\r\n}\r\n\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}></input></FormControl>\r\n}\r\n\r\n","export const required = value => {\r\n    if(value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControl/FormControl\";\r\nimport {maxLengthCreator, required} from \"../../Utilites/Validation/Validation\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id}/> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    let addNewMessageChange = (values) => {\r\n       props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessageChange}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required,maxLength50 ]} name=\"newMessageBody\"  placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props} />\r\n\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import React from 'react';\r\nimport {sendMessageCreator, } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)","import React from 'react'\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from '../../assets/images/user.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged((p))\r\n                             }}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={styles.userPhoto}\r\n                                 alt=\"userPhoto\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.unfollow(u.id)}}>Unfollow</button>\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                    props.follow(u.id)}}>Follow</button>}\r\n                        </div>\r\n                    </span>\r\n                <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"u.location.country\"}</div>\r\n                            <div>{\"u.location.city\"}</div>\r\n                        </span>\r\n                    </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n\r\n};\r\n\r\nexport default Users","/*import preloader from \"../../../assets/images/Infinity-1s-200px.svg\"*/\r\nimport {CubeGrid} from 'styled-loaders-react'\r\nimport React from \"react\";\r\nimport style from \"./Preloader.module.css\"\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={style.preloader}>\r\n        <CubeGrid color=\"#4a76a8\" size=\"100px\" duration=\"5s\"/>\r\n    </div>\r\n}\r\nexport default Preloader","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, getUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow, setCurrentPage,\r\n        toggleFollowingProgress, getUsers}))(UsersContainer);","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n            status: this.props.status,\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utilites/Validation/Validation\";\r\nimport {Textarea} from \"../../common/FormControl/FormControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let addNewMessageProfileChange = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n           <AddMessagePostFormRedux onSubmit={addNewMessageProfileChange}/>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessagePostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessagePostFormRedux = reduxForm({form: \"profileAddMessageForm\"})(AddMessagePostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile, getStatus, updateStatus\r\n    }),\r\n    withRouter,\r\n    /*withAuthRedirect*/\r\n)(ProfileContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ?\r\n                <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\n\r\n\r\nexport default  connect (mapStateToProps, {logout}) (HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../components/common/FormControl/FormControl\";\r\nimport {required} from \"../Utilites/Validation/Validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../../src/components/common/FormControl/FormControl.module.css\"\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <div className={style.loginBlock}>\r\n            <form onSubmit={props.handleSubmit} className={style.loginFormBlock}>\r\n                <div>\r\n                    <Field placeholder=\"Email\" component={Input} validate={required} name=\"email\" />\r\n                </div>\r\n                <div>\r\n                    <Field placeholder=\"Password\" component={Input} validate={required} name=\"password\"\r\n                           type=\"password\"/>\r\n                </div>\r\n                <div>\r\n                    <Field type=\"checkbox\" component=\"input\" name=\"rememberMe\"/> Remember me\r\n                </div>\r\n                {props.error && <div className={style.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <button className={style.buttonLogin}>Log in</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className={style.nameBlock}>Please enter username and password</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {initializeApp} from \"./redux/app-reducer\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n}\n\n    render() {\n        if(!this.props.initialized) {\n            return <Preloader/>\n    }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose (\nwithRouter,\nconnect(mapStateToProps, {initializeApp})) (App);","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import {BrowserRouter} from \"react-router-dom\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1IM1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto___Q7JB\",\"selectedPage\":\"users_selectedPage__1M3vK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1VP7N\",\"posts\":\"MyPosts_posts__29qZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__IzTHf\",\"loginBlock\":\"Header_loginBlock__3eT4E\"};"],"sourceRoot":""}